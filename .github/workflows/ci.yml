name: CI and Deploy to Staging

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - staging

permissions: # Adding permissions for OIDC
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.16.0]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # Client steps
    - name: Install dependencies (Client)
      working-directory: ./client
      run: npm install

    - name: Run Client linting
      working-directory: ./client
      run: npm run lint

    - name: Run Client tests
      working-directory: ./client
      run: npm test

    # Server steps
    - name: Install dependencies (Server)
      working-directory: ./server
      run: npm install

    - name: Run Server linting
      working-directory: ./server
      run: npm run lint

    - name: Run Server tests
      working-directory: ./server
      run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-west-2
        role-to-assume: arn:aws:iam::924083598312:role/taro-admin # Make sure this ARN matches your specific role
        role-session-name: taro-admin-session # You can name this as you like

    # Build and package your code if needed

    - name: Install Elastic Beanstalk CLI
      run: pip install awsebcli

    - name: Deploy to Elastic Beanstalk
      run: |
        # Navigate to your server directory, if applicable
        cd ./server

        # Initialize Elastic Beanstalk CLI with your environment
        eb init outage-outrage -r us-west-2 -p "64bit Amazon Linux 2018.03 v4.14.1 running Node.js"

        # Deploy to your specific environment
        eb deploy outage-outrage-staging
